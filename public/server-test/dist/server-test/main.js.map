{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/article-page/article-page.component.ts","./src/app/components/article-page/article-page.component.html","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/landing-page/landing-page.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/login-page/login-page.component.ts","./src/app/components/login-page/login-page.component.html","./src/app/components/nav/nav.component.ts","./src/app/components/nav/nav.component.html","./src/app/components/registration-page/registration-page.component.ts","./src/app/components/registration-page/registration-page.component.html","./src/app/services/auth.service.ts","./src/app/services/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { ArticlePageComponent } from './components/article-page/article-page.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { RegistrationPageComponent } from './components/registration-page/registration-page.component';\n\nconst routes: Routes = [\n  {path: '',redirectTo: '/home', pathMatch: 'full'},\n  {\n    path:'', component: LayoutComponent,\n    children: [\n      {path: 'home', component: LandingPageComponent, data: {title: 'home'}},\n      {path: 'article-page/:id', component: ArticlePageComponent, data: {title: 'article-page'}},\n      {path: 'login', component: LoginPageComponent, data: {title: 'login-page'}},\n      {path: 'register', component: RegistrationPageComponent, data: {title: 'registration-page'}}\n    ]\n  },\n  {path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'server-test';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { ArticlePageComponent } from './components/article-page/article-page.component';\nimport { RegistrationPageComponent } from './components/registration-page/registration-page.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { AuthService } from './services/auth.service';\nimport { PostsService } from './services/posts.service';\n//needs to be \"http client module\" instead of httpClient for some reason\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LayoutComponent,\n    LandingPageComponent,\n    ArticlePageComponent,\n    RegistrationPageComponent,\n    LoginPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthService,\n    PostsService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { PostsService } from '../../services/posts.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-article-page',\n  templateUrl: './article-page.component.html',\n  styleUrls: ['./article-page.component.scss']\n})\nexport class ArticlePageComponent implements OnInit {\n\n  post; \n  id;\n  commentForm;\n\n  constructor(\n    private auth:AuthService,\n    private posts:PostsService,\n    private route:ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) { \n    this.commentForm = this.formBuilder.group({\n    text: ''\n  });\n}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      //What to call the variable?\n\n      //  run posts.get to get the relevant post, store it in this.post\n      this.posts.get(this.id).subscribe((data)=>{\n        this.post = JSON.parse(JSON.stringify(data));\n        console.log(this.post);\n      },\n      (err)=>{console.error(err);\n      })\n\n    });\n    \n  }\n\n  isLoggedIn = () => {\n    return this.auth.isLoggedIn();\n  }\n\n  //method for adding comments\n  //\n  addComment= (commentValue) => {\n      if (!commentValue.text || commentValue.text==='') {return;}\n      this.posts.addComment(this.post._id, {\n          text: commentValue.text,\n          //author:'user'\n      }).subscribe((data) =>{\n        console.log(data);\n\n        //this is a silly workaround, there should be a way to get this info FROM the data and not need to grab it from the JWT token\n        data.data._creator={username:this.auth.currentUser()};\n        console.log(data);\n\n        this.post._comments.push(data.data);\n\n          //this has more data than other comment. Could instead add\n          //\n          //text:data.data.text\n          //createdAt:data.data.createdAt\n          //_creator:data.data._creator\n          //\n          //to match the other comments. Optional.        \n      },\n      (err)=>{console.error(err);\n      },\n      ()=>{this.commentForm.reset();}\n      );\n  };\n  \n  // write a method to take _creator and get username\n  //probably need to write a post service that makes a server call on the \"User Routes\", and write an appropriate userCntroller function\n\n  //How will Upvotes work?\n  //\n  // $scope.incrementUpvotes=function(comment){\n  //     posts.upvoteComment(post,comment)\n  // }\n\n}\n","    <div class=\"posts\">\n        <div class=\"column pro-column\">\n            <h2>{{post.title}}</h2>\n            <h2>{{post.text}}</h2>\n            <div class=\"article-block\" *ngFor=\"let item of post._comments\">\n                <h5>{{item._creator.username}}</h5>\n                <p>{{item.text}}</p>\n                <!-- Link to comment sub-page -->\n                <!-- <a [routerLink]=\"['/article-page', item._id]\">More Details</a> -->\n            </div>\n        </div>\n    </div>\n\n<form *ngIf='isLoggedIn()'[formGroup]=\"commentForm\" (ngSubmit)=\"addComment(commentForm.value)\">\n    <h3>Add Comment</h3>\n    \n    <div>\n      <input type=\"text\"\n      placeholder=\"Add a rebuttal\"\n      formControlName=\"text\">\n    </div>\n    <button type=\"submit\">Post</button>\n    </form>\n    <div *ngIf=\"!isLoggedIn()\">\n        <h3>You need to <a [routerLink]=\"['/login']\">Log In</a> or <a [routerLink]=\"['/register']\">Register</a> before you can add a rebuttal.</h3>\n      </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { PostsService } from '../../services/posts.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  postForm;\n\n  constructor(\n    private auth:AuthService,\n    private posts:PostsService,\n    private formBuilder: FormBuilder,\n  ) { \n    this.postForm = this.formBuilder.group({\n      title: '',\n      text: ''\n    });\n  }\n\n  proData;\n\n  ngOnInit(): void {\n    //need to run posts.getAll, set proData=posts.posts after doing that\n    this.posts.getAll().subscribe((data)=>{\n      console.log('getAll successful')\n      this.proData = JSON.parse(JSON.stringify(data.data));\n      //wait, this is an array not an object. I guess stringify still works!\n    },\n    (err)=>{console.error(err);\n    })\n  }\n\n  isLoggedIn = () => {\n    return this.auth.isLoggedIn();\n  }\n\n\n  //Method for making post:\n  //\n  addPost = (postValue)=>{\n      if(!postValue.title || postValue.title===''){return; };\n      this.posts.create({\n          title: postValue.title,\n          text: postValue.text,\n      }).subscribe((data)=>{\n        this.proData.push(data.data);\n        //this.postForm.reset();\n      },\n      (err)=>{console.error(err);\n      },\n      ()=>{this.postForm.reset();}\n      )\n  };\n\n  //How will Upvotes work?\n  //\n  // incrementUpvotes=(post)=>{\n  //     posts.upvote(post);\n  // };\n\n}\n","\n<div class=\"landing-page\">\n    <div class=\"question-header\">\n        <h1>Buttholes - good or bad?</h1>\n    </div>\n\n\n    <div class=\"articles\">\n        <div class=\"column pro-column\">\n            <h2>Pros</h2>\n            <div class=\"article-block\" *ngFor=\"let item of proData\">\n                <h1>{{item.title}}</h1>\n                <p>{{item.text}}</p>\n                <a [routerLink]=\"['/article-page', item._id]\">More Details</a>\n                <!-- <a routerLink='article-page/7' routerLinkActive='active'>More...</a> -->\n            </div>\n        </div>\n        <div class=\"column con-column\">\n            <h2>Cons</h2>\n            <div class=\"article-block\">\n                <h1>Title</h1>\n                <p>Short Description</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form *ngIf='isLoggedIn()'[formGroup]=\"postForm\" (ngSubmit)=\"addPost(postForm.value)\">\n    <h3>Add Post</h3>\n    \n    <div>\n      <input type=\"text\"\n      placeholder=\"Title\"\n      formControlName=\"title\">\n    </div>\n    <div>\n      <input type=\"text\"\n      placeholder=\"Text\"\n      formControlName=\"text\">\n    </div>\n    <button type=\"submit\">Post</button>\n    </form>\n    <div *ngIf=\"!isLoggedIn()\">\n        <h3>You need to <a [routerLink]=\"['/login']\">Log In</a> or <a [routerLink]=\"['/register']\">Register</a> before you can add a post.</h3>\n      </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  //user={};\n  //need to get user.username and user.password from the frontend\n  logInForm;\n\n  constructor(\n    private auth:AuthService,\n    public router:Router,\n    private formBuilder: FormBuilder,\n  ) {\n    this.logInForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n   }\n\n\n\n  ngOnInit(): void {\n    //if already logged in, send to 'home'\n    if ( this.auth.isLoggedIn()){\n      this.router.navigateByUrl('/home');\n    }\n  }\n\n  logIn = function(user){\n    this.auth.logIn(user).subscribe((data) => {\n      this.auth.saveToken(data.token);\n      //console.log('token saved')\n      this.logInForm.reset();\n\n    },\n    (err) => {\n      console.error(err);\n      this.logInForm.reset();\n      //How to get specifics of error and pop them up in window? \"incorrect username\", etc\n    },\n    () =>{\n      console.log('routing back home...');\n      this.router.navigateByUrl('/home');\n      //Not sure about this, might need to replace - location service from angular/common?\n      //Should this redirect go in \"subscribe' or here?\n    })\n  };\n\n}\n","<!-- <p>login-page works!</p> -->\n\n<form [formGroup]=\"logInForm\" (ngSubmit)=\"logIn(logInForm.value)\">\n<h3>Log In</h3>\n\n<div>\n  <input type=\"text\"\n  class=\"form-control\"\n  placeholder=\"Username\"\n  formControlName=\"username\">\n</div>\n<div>\n  <input type=\"password\"\n  class=\"form-control\"\n  placeholder=\"Password\"\n  formControlName=\"password\">\n</div>\n<button type=\"submit\">Log In</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(\n    private auth:AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  isLoggedIn = () => {\n    return this.auth.isLoggedIn();\n  }\n\n  currentUser = () => {\n    return this.auth.currentUser();\n  }\n\n  logOut = () => {\n    this.auth.logOut();\n  }\n\n}\n","<div class=\"nav-wrapper\">\n    <h1>Name</h1>\n    <ul>\n        <li><a [routerLink]=\"['/']\">Home</a></li>\n    </ul>\n    <ul>\n        <li *ngIf=\"isLoggedIn()\"><a>{{ currentUser() }}</a></li>\n        <li *ngIf=\"isLoggedIn()\"><a href='' (click)=\"logOut()\">Log Out</a></li> \n        <!-- ^^^href is to make it look linky^^^ -->\n        <li *ngIf=\"!isLoggedIn()\"><a [routerLink]=\"['/login']\">Log In</a></li>\n        <li *ngIf=\"!isLoggedIn()\"><a [routerLink]=\"['/register']\">Register</a></li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.scss']\n})\nexport class RegistrationPageComponent implements OnInit {\n  //user={};\n  //need to get user.username and user.password from the frontend\n\n  registrationForm;\n\n  constructor(\n    private auth:AuthService,\n    public router:Router,\n    private formBuilder: FormBuilder,\n  ) { \n    this.registrationForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n\n  ngOnInit(): void {\n    //if already logged in, send to 'home'\n    if ( this.auth.isLoggedIn()){\n      this.router.navigateByUrl('/home');\n    }\n  }\n\n\n  //Not sure if this is right\n  register = (user) => {\n    this.auth.register(user).subscribe((data)=>{\n      this.auth.saveToken(data.token);\n      //console.log('token saved')\n      this.registrationForm.reset();\n    },\n    (err) => {\n      console.error(err);\n      this.registrationForm.reset();\n      //How to get specifics of error and pop them up in window? \"incorrect username\", etc\n    },\n    () => {\n      console.log('routing back home...');\n      this.router.navigateByUrl('/home');\n      //Not sure about this, might need to replace - location service from angular/common?\n      //Should this go in \"subscribe' or here?\n    })\n    }\n    \n}\n","<!-- <p>registration-page works!</p> -->\n\n<form [formGroup]=\"registrationForm\" (ngSubmit)=\"register(registrationForm.value)\">\n    <h3>Register</h3>\n    \n    <div>\n      <input type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      formControlName=\"username\">\n    </div>\n    <div>\n      <input type=\"password\"\n      class=\"form-control\"\n      placeholder=\"Password\"\n      formControlName=\"password\">\n    </div>\n    <button type=\"submit\">Register</button>\n    </form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http:HttpClient\n    ) {}\n\n    //TODO: Figure out how the fuck error handling works and clean it up\n\n    private handleError=function(error : HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          console.error('An error occurred:', error.error.message);\n        } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong.\n          console.error(\n            `Backend returned code ${error.status}, ` +\n            `body was: ${JSON.stringify(error.error)}`);\n        }\n        // Return an observable with a user-facing error message.\n        return throwError(\n          'Something bad happened; please try again later.');\n      }\n\n\n    saveToken=function(token){\n      localStorage.setItem('opinion-site token',token);\n    }\n\n    getToken=function(){\n        return localStorage.getItem('opinion-site token');\n    }\n\n    isLoggedIn = function(){\n        var token=this.getToken();\n\n        if (token){\n            var payload = JSON.parse(atob(token.split('.')[1]));\n\n            return payload.exp>Date.now()/1000;\n        } else {\n            return false;\n        }\n    };\n\n    currentUser=function(){\n        if (this.isLoggedIn()){\n            var token=this.getToken();\n            var payload = JSON.parse(atob(token.split('.')[1]));\n\n            return payload.username;\n        }\n    };\n\n    register=function(user){\n        return this.http.post('/api/register',user)\n        .pipe(\n            catchError(this.handleError)\n        );\n        \n        //.success(function(data){\n        //    this.saveToken(data.token);\n        //});\n    };\n\n    logIn=function(user){\n        return this.http.post('/api/login',user)\n        .pipe(\n            catchError(this.handleError)\n        );\n        // .success(function(data){\n        //     this.saveToken(data.token);\n        //^^^Original code; rewriting so the \"success\" portion happens in the login component as a subscription\n        //});\n    };\n\n    logOut=function(){\n        localStorage.removeItem('opinion-site token');\n    };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(\n    private auth: AuthService,\n    private http: HttpClient\n  ) { }\n\n   //TODO: Figure out how the fuck error handling works and clean it up\n\n   private handleError=function(error : HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${JSON.stringify(error.error)}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n\n//posts=[]\n\ngetAll=function(){\n    return this.http.get('/api/posts')\n    .pipe(\n      catchError(this.handleError)\n  );\n};\n\ncreate=function(post){\n    return this.http.post('/api/posts',post,{\n        headers:{Authorization: 'Bearer '+ this.auth.getToken()}\n    }).pipe(\n      catchError(this.handleError)\n  );\n};\n\n//How will upvotes work?\n//\n// upvote=function(post){\n//     return this.http.put('/api/posts/'+post._id+'/upvote',null,{\n//         headers:{Authorization: 'Bearer '+this.auth.getToken()}\n//     }).success(function(data){\n//         post.upvotes+=1;\n//     });\n// };\n\nget=function(id){\n    return this.http.get('/api/posts/'+id)\n    .pipe(\n      catchError(this.handleError)\n  );\n    \n    //.then(function(res){\n        //return res.data\n        //Not sure why this is a \"then\" acting on res.data instead of a \"success\" acting on data like the other ones\n    //});\n};\n\naddComment=function(id, comment){\n    return this.http.post('/api/posts/'+id+'/comments', comment,{\n        headers:{Authorization: 'Bearer '+this.auth.getToken()}\n    })\n    .pipe(\n      catchError(this.handleError)\n  );\n    //This returns an object with 'success:true', 'data:newComment', and 'existingPost' (the post it's attached to)\n};\n\n//How will upvotes work?\n//\n// upvoteComment=function(post, comment){\n//     return this.http.put('/api/posts/'+post._id+'/comments/'+comment._id+'/upvote',null,{\n//         headers:{Authorization: 'Bearer '+this.auth.getToken()}\n//     }).success(function(data){\n//         comment.upvotes+=1;\n//     });\n// };\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}